{"version":3,"sources":["./src/app/talk/talk.component.ts","./src/app/talk/talk.component.html","./src/app/profile/fake-profile/fake-profile.component.ts","./src/app/profile/fake-profile/fake-profile.component.html","./src/app/register/custom.validator.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/visual-novel/visual-novel.component.ts","./src/app/visual-novel/visual-novel.component.html","./src/app/accountservice.service.ts","./src/environments/environment.ts","./src/app/messages/conversation.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/messages/conversation/conversation.component.ts","./src/app/messages/conversation/conversation.component.html","./src/app/messages/message.ts","./src/app/messages/messageservice.service.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/matches/matchservice.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/matches/matches.component.ts","./src/app/matches/matches.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/real-profile.guard.ts","./src/app/profile/real-profile/real-profile.component.ts","./src/app/profile/real-profile/real-profile.component.html","./src/app/mainpage/mainpage.component.ts","./src/app/mainpage/mainpage.component.html","./src/app/profile.ts","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/matches/match.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { VisualNovelComponent } from '../visual-novel/visual-novel.component';\n\n@Component({\n  selector: 'app-talk',\n  templateUrl: './talk.component.html',\n  styleUrls: ['./talk.component.css']\n})\nexport class TalkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    VisualNovelComponent.content = \"You must be very bored clicking here, let's talk then. Tell me about all your problems.\";\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-7\">\n            <h1 class=\"talkShow text-center\">Talk show with Ivan Illich</h1>\n        </div>\n        <div class=\"bottom-buttons \">\n            <button class=\"btn btn-dark\" [routerLink]=\"['/main']\">Home</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VisualNovelComponent } from '../../visual-novel/visual-novel.component';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { AccountserviceService } from '../../accountservice.service';\nimport { Profile } from '../../profile';\n\n@Component({\n  selector: 'app-fake-profile',\n  templateUrl: './fake-profile.component.html',\n  styleUrls: ['./fake-profile.component.css']\n})\nexport class FakeProfileComponent implements OnInit {\n\n  fakeProfileForm: FormGroup;\n  fakeProfile: Profile;\n  fileToUpload: File | null = null;\n  // id of current user\n  userId: string;\n  // id of current profile\n  accountId: string;\n  // image url of profile image of current profile\n  imageurl: string;\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private accountService: AccountserviceService) {\n    const routeParams = this.route.snapshot.paramMap;\n    this.accountId = routeParams.get('accountId');\n    this.userId = accountService.getSecureToken(\"AccountId\");\n  }\n\n  ngOnInit(): void {\n    this.fakeProfileForm = this.fb.group({\n      fakeName: ['', [Validators.required]],\n      fakeAge: ['', [Validators.required, Validators.min(0)]],\n      fakeGender: ['', [Validators.required]],\n      fakeLocation: ['', [Validators.required]],\n      fakeTagline: ['', [Validators.required, Validators.maxLength(50)]],\n      fakeDescription: ['', [Validators.required, Validators.maxLength(300)]],\n      fakePhoto: '',\n    });\n\n    // if user is not signing up a new account, get current user's information\n    if (this.accountId != null) {\n      this.imageurl = this.accountService.getUserImage('fake', this.accountId);\n      this.accountService.getAccount(this.accountId).subscribe((account) => {\n        this.fakeProfileForm.patchValue({\n          fakeName: account[\"fakeProfile\"][\"fakeName\"],\n          fakeAge: account[\"fakeProfile\"][\"fakeAge\"],\n          fakeGender: account[\"fakeProfile\"][\"fakeGender\"],\n          fakeLocation: account[\"fakeProfile\"][\"fakeLocation\"],\n          fakeTagline: account[\"fakeProfile\"][\"fakeTagline\"],\n          fakeDescription: account[\"fakeProfile\"][\"fakeDescription\"],\n        });\n      });\n      document.getElementById(\"fakePhotoDisplay\").setAttribute(\"src\", this.imageurl);\n    }\n    VisualNovelComponent.content = \"A bunch of lies. Liar.\";\n  }\n\n  // set image to upload and display image\n  showImage(files: FileList) {\n    this.fileToUpload = files.item(0);\n    document.getElementById(\"fakePhotoDisplay\").setAttribute(\"src\", URL.createObjectURL(this.fileToUpload));\n  }\n\n  //update profile information\n  onSubmit() {\n    let profile = new Profile(this.fakeProfileForm.value.fakeName, this.fakeProfileForm.value.fakeAge,\n      this.fakeProfileForm.value.fakeLocation, this.fakeProfileForm.value.fakeTagline,\n      this.fakeProfileForm.value.fakeDescription, this.fakeProfileForm.value.fakeGender)\n    this.accountService.updateFakeProfile(profile, this.accountService.getSecureToken(\"AccountId\"));\n\n    if (this.fileToUpload != null) {\n      const formData = new FormData();\n      formData.append('file', this.fileToUpload);\n      this.accountService.uploadPhoto(formData, 'fake' + this.accountService.getSecureToken(\"AccountId\"));\n    }\n\n    this.router.navigate(['/', 'main']);\n  }\n  \n\n}\n","<div>\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-7\">\n            <form class=\"container\" [formGroup]=\"fakeProfileForm\" novalidate (ngSubmit)=\"onSubmit()\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"row\">\n                            <div class=\"col text-center\">\n                                <label for=\"fakeName\">Name:</label>\n                                <p><input formControlName=\"fakeName\" id=”fakeName” placeholder=\"Your name\"></p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeName.dirty && fakeProfileForm.controls.fakeName.hasError('required')\">\n                                    * Name is required!\n                                </p>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col text-center\">\n                                <label for=\"fakeAge\">Age:</label>\n                                <p><input formControlName=\"fakeAge\" id=”fakeAge” placeholder=\"Your age\"></p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeAge.dirty && fakeProfileForm.controls.fakeAge.hasError('required')\">\n                                    * Age is required!\n                                </p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeAge.dirty && fakeProfileForm.controls.fakeAge.hasError('min')\">\n                                    * Age has to be more than 0!\n                                </p>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col text-center\">\n                                <label for=\"fakeGender\">Gender:</label>\n                                <p><input formControlName=\"fakeGender\" id=”fakeGender” placeholder=\"Your Gender\"></p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeGender.dirty && fakeProfileForm.controls.fakeGender.hasError('required')\">\n                                    * Gender is required!\n                                </p>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col text-center\">\n                                <label for=\"fakeLocation\">Lives at:</label>\n                                <p><input formControlName=\"fakeLocation\" id=”fakeLocation” placeholder=\"Your Location\"></p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeLocation.dirty && fakeProfileForm.controls.fakeLocation.hasError('required')\">\n                                    * Location is required!\n                                </p>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col text-center\">\n                                <label for=\"fakeTagline\">Tagline:</label>\n                                <p><input formControlName=\"fakeTagline\" id=”fakeTagline” placeholder=\"Your Tagline\"></p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeTagline.dirty && fakeProfileForm.controls.fakeTagline.hasError('required')\">\n                                    * Tagline is required!\n                                </p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeTagline.dirty && fakeProfileForm.controls.fakeTagline.hasError('maxLength')\">\n                                    * Tagline can only have a maximum of 50 characters.\n                                </p>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col text-center\">\n                                <label for=\"fakeDescription\">Description:</label>\n                                <p><input formControlName=\"fakeDescription\" id=”fakeDescription” placeholder=\"Your Description\"></p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeDescription.dirty && fakeProfileForm.controls.fakeDescription.hasError('required')\">\n                                    * Description is required!\n                                </p>\n                                <p *ngIf=\"fakeProfileForm.controls.fakeDescription.dirty && fakeProfileForm.controls.fakeDescription.hasError('maxLength')\">\n                                    * Description can only have a maximum of 300 characters.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col text-center\">\n                        <label for=\"fakePhoto\">Fake Profile Photo:</label>\n                        <p><input type=\"file\" accept=\"image/*\" formControlName=\"fakePhoto\" id=\"fakePhoto\" (change)=\"showImage($event.target.files)\"></p>\n                        <img id=\"fakePhotoDisplay\" height=\"300\" />\n                    </div>\n                </div>\n\n                <div class=\"fake-profile-vn-btn\">\n                    <button class=\"btn btn-dark\" *ngIf=\"accountId != userId && accountId != null\" [routerLink]=\"['/main/matches']\">Back to Matches</button>\n                    <button class=\"btn btn-dark\" *ngIf=\"accountId === null || accountId === userId\" type=\"submit\" [disabled]=\"!fakeProfileForm.valid\">Continue</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","// validate whether the passwords are equal\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nexport function passwordMatchValidator(pwSet: FormGroup) {\r\n    var register_password = pwSet.controls.register_password.value;\r\n    var register_confirm_password = pwSet.controls.register_confirm_password.value;\r\n    if (!(register_password === register_confirm_password)) return { 'notmatch': true };\r\n    return null;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VisualNovelComponent } from '../visual-novel/visual-novel.component';\nimport { passwordMatchValidator } from './custom.validator';\nimport { AccountserviceService } from '../accountservice.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  constructor( private fb: FormBuilder, private route: ActivatedRoute, private router: Router,\n    private accountService: AccountserviceService ) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      register_username: ['', [Validators.required]],\n      register_email: ['', [Validators.required, Validators.email]],\n      pwSet: this.fb.group ({\n        // regex that checks for a psssword that contains 1 symbol, 1 uppercase and 1 lowercase character\n        register_password: ['', [Validators.required, Validators.pattern(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?\\W)/)]],\n        register_confirm_password: ['', [Validators.required]]\n      }, {validators: passwordMatchValidator})\n    });\n\n    VisualNovelComponent.content = \"Glad to see you back.\";\n  }\n  \n  // when the user completes registration\n  onSubmit() {\n    this.accountService.addAccount(this.registerForm.value.register_username, this.registerForm.get('pwSet.register_password').value,\n      this.registerForm.value.register_email).subscribe((account)=>{\n        // add their Id into Session Storage\n        sessionStorage.setItem(\"AccountId\", account[0][\"_id\"]);\n        // navigate to get real profile information\n        this.router.navigate(['/main/profile/real'], { relativeTo: this.route });\n      })\n  }\n}\n\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-8\">\n            <form [formGroup]=\"registerForm\" novalidate (ngSubmit)=\"onSubmit()\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"form-group\">\n                                <label for=\"register_username\"><h3>Username</h3></label>\n                                <p><input formControlName=\"register_username\" id=”register_username” placeholder=\"Your username\"></p>\n                                <p *ngIf=\"registerForm.controls.register_username.dirty && registerForm.controls.register_username.hasError('required')\">\n                                    * Username is required!\n                                </p>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label for=\"register_email\"><h3>Email</h3></label>\n                                <p><input formControlName=\"register_email\" id=”register_email” placeholder=\"Your email\"></p>\n                                <p *ngIf=\"registerForm.controls.register_email.dirty && registerForm.controls.register_email.hasError('required')\">\n                                    * Email is required!\n                                </p>\n                                <p *ngIf=\"registerForm.controls.register_email.dirty && registerForm.controls.register_email.hasError('email')\">\n                                    * Email is not in the correct format!\n                                </p>\n                            </div>\n                        </div>\n                        <div class=\"col\">\n                            <div formGroupName=\"pwSet\" class=\"form-group\">\n                                <label for=\"register_password\"><h3>Password</h3></label>\n                                <p><input formControlName=\"register_password\" id=”register_password” type=”password” placeholder=\"Your password\"></p>\n                                <p *ngIf=\"registerForm.get('pwSet.register_password').dirty && registerForm.get('pwSet.register_password').hasError('required')\">\n                                    * Password is required\n                                </p>\n                                <p *ngIf=\"registerForm.get('pwSet.register_password').dirty && registerForm.get('pwSet.register_password').errors?.pattern\">\n                                    * Password should contains at least 1 symbol, 1 uppercase and 1 lowercase character\n                                </p>\n\n                                <label for=\"register_confirm_password\"><h3>Confirm password</h3></label>\n                                <p><input formControlName=\"register_confirm_password\" id=”register_confirm_password” type=”password” placeholder=\"Confirm password\"></p>\n                                <p *ngIf=\"registerForm.get('pwSet').hasError('notmatch')\">\n                                    * Passwords do not match\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button class=\"btn btn-primary register-vn-btn\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-visual-novel',\n  templateUrl: './visual-novel.component.html',\n  styleUrls: ['./visual-novel.component.css']\n})\nexport class VisualNovelComponent implements OnInit {\n  // change the name that shows on the interface\n  static actorName: string = \"Ivan Illich\";\n  // change the image on the interface\n  static actorImage: string = \"assets/images/ruv.png\";\n  // change the text on the interface\n  static content: string = \"The name's Ivan Illich. Pleasure to meet you.\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  get getActorName(): string{\n    return VisualNovelComponent.actorName;\n  }\n\n  get getContent(): string{\n    return VisualNovelComponent.content;\n  }\n\n  get getActorImage(): string{\n    return VisualNovelComponent.actorImage;\n  }\n\n  set setActorName(name: string){\n    VisualNovelComponent.actorName = name;\n  }\n  \n  set setContent(content: string){\n    VisualNovelComponent.content = content;\n  }\n\n  set setActorImage(src: string){\n    VisualNovelComponent.actorImage = src;\n  }\n\n  setRuv(){\n    VisualNovelComponent.actorImage = \"assets/images/ruv.png\";\n  }\n}\n","<img [src]=\"getActorImage\" class=\"img-fluid float-left proportionRuv\" (error)=\"setRuv()\" alt=\"Ruv\">\n\n<div class=\"fixed-bottom vnbox\">\n    <h2>{{getActorName}}</h2>\n    <h3>{{getContent}}</h3>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Profile } from './profile';\nimport { Account } from './account';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountserviceService {\n\n  // updating of account information\n  accountUrl: string = \"http://localhost:3000/api/account\";\n  // authenticate account\n  authUrl: string = \"http://localhost:3000/api/auth\";\n  // update fakeProfile\n  fakeProfileUrl: string = \"http://localhost:3000/api/fakeProfile/\";\n  // update realProfile\n  realProfileUrl: string = \"http://localhost:3000/api/realProfile/\";\n  // stores and retrieves images\n  photoUrl: string = \"http://localhost:3000/api/image/\"\n\n\n  constructor(private http: HttpClient) { }\n  \n  getUserImage(realOrFake: string, accountId: string) {\n    return this.photoUrl + realOrFake + accountId;\n  }\n\n  getAccount(accountId){\n    return this.http.get<any[]>(this.accountUrl + '/' + accountId);\n  }\n\n  //add account: username, password, email\n  addAccount(username: string, password: string, email: string) {\n    return this.http.post<any[]>(this.accountUrl, { 'username': username, 'password': password, 'email': email });\n  }\n\n  updateFakeProfile(fakeProfile: Profile, account_id: string) {\n    this.http.put<any[]>(this.fakeProfileUrl + account_id, {\n      'fakeName': fakeProfile.name,\n      'fakeAge': fakeProfile.age,\n      'fakeLocation': fakeProfile.location,\n      'fakeTagline': fakeProfile.tagline,\n      'fakeDescription': fakeProfile.description,\n      'fakeGender': fakeProfile.gender,\n    }).subscribe((value) => {\n      console.log(value);\n    });;\n  }\n\n  updateRealProfile(realProfile: Profile, account_id) {\n    console.log(this.realProfileUrl + account_id);\n    this.http.put<any[]>(this.realProfileUrl + account_id, {\n      'realName': realProfile.name,\n      'realAge': realProfile.age,\n      'realLocation': realProfile.location,\n      'realTagline': realProfile.tagline,\n      'realDescription': realProfile.description,\n      'realGender': realProfile.gender,\n    }).subscribe((value) => {\n      console.log(value);\n    });\n  }\n\n  uploadPhoto(formData: FormData, fileName: string){\n    return this.http.post<any[]>(this.photoUrl + fileName, formData).subscribe(\n      (val) => console.log(val),\n      (err) => console.error(err)\n    );\n  }\n\n  getPhoto(filename: string){\n    return this.http.get<any[]>(this.photoUrl+ filename).subscribe(\n      (val) => console.log(val),\n      (err) => console.error(err)\n    );\n  }\n\n  authAccount(username: string, password: string) {\n    return this.http.post<any[]>(this.authUrl, { 'username': username, 'password': password });\n  }\n\n  setSecureToken(key: string, secure_token: string) {\n    sessionStorage.setItem(key, secure_token)\n  }\n\n  getSecureToken(key: string) {\n    return sessionStorage.getItem(key);\n  }\n  \n  logout() {\n    sessionStorage.removeItem(\"AccountId\");\n    sessionStorage.removeItem(\"permission\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyBuvFz3_TYzgs_6gHR-6zodxakp2R2PY34\",\n    authDomain: \"vndates-582b8.firebaseapp.com\",\n    projectId: \"vndates-582b8\",\n    storageBucket: \"vndates-582b8.appspot.com\",\n    messagingSenderId: \"669523751365\",\n    appId: \"1:669523751365:web:f5710a6bd35bdd6d7c9bac\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Conversation{\r\n    // unique identifier of user \r\n    private uid: string;\r\n    // user's username\r\n    private username: string;\r\n\r\n    constructor(uid: string, username: string){\r\n        this.uid = uid; \r\n        this.username = username;\r\n    }\r\n\r\n    public getUid(): string{\r\n        return this.uid;\r\n    }\r\n\r\n    public getUsername(): string{\r\n        return this.username;\r\n    }\r\n}","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { VisualNovelComponent } from '../visual-novel/visual-novel.component';\nimport { AccountserviceService } from '../accountservice.service';\nimport { MessageserviceService } from './messageservice.service';\nimport { Conversation } from './conversation';\nimport { Router, ActivatedRoute } from '@angular/router'\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  // stores reference to HTML element that store the conversations\n  @ViewChildren('conversations') conversations: QueryList<any>;\n  // id of user\n  currentUid: string;\n  names: string[] = [];\n  imageurls: string[] = [];\n  conversationList: Conversation[] = [];\n  // alternate imageSrc for users lacking profile images\n  altSrc: string = \"https://weneedfun.com/wp-content/uploads/2017/06/Anime-Gifs-29.gif\"\n\n\n  constructor(private accountService: AccountserviceService, private messageService: MessageserviceService) {\n    // set current user id \n    this.currentUid = accountService.getSecureToken(\"AccountId\");\n\n    // set conversationList, names\n    this.accountService.getAccount(this.accountService.getSecureToken(\"AccountId\")).subscribe((account) => {\n      this.messageService.getConversations(account[\"username\"]).subscribe((conversations) => {\n        console.log(conversations);\n        this.conversationList = conversations;\n\n        if (this.conversationList.length > 0) {\n          VisualNovelComponent.content = \"Looks like some people want to talk to you. Oh wow.\";\n        } else {\n          VisualNovelComponent.content = \"No one wants to talk to you,hah!\"\n        }\n        VisualNovelComponent.actorImage = \"../../assets/images/ruv.png\";\n        VisualNovelComponent.actorName = \"Ivan Illich\";\n\n        for (var conversation of this.conversationList) {\n          this.names.push(conversation[\"username\"]);\n        }\n      });\n    });\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    // if there are any changes in conversations\n    this.conversations.changes.subscribe(() => {\n      this.parseConversations();\n    })\n  }\n\n  // parse conversations\n  parseConversations() {\n    for (let i = 0; i < this.conversationList.length; i++) {\n      console.log(this.conversationList[i][\"uid\"]);\n      // disply image\n      document.getElementById(\"conversationImage\" + i).setAttribute(\"src\", this.accountService.getUserImage(\"fake\", this.conversationList[i][\"uid\"]));\n    }\n  }\n\n  // creating conversationId out of the Ids\n  compareUids(firstUid: string, secondUid: string): string {\n    if (firstUid.localeCompare(secondUid) < 0) {\n      return firstUid + '_' + secondUid;\n    } else {\n      return secondUid + '_' + firstUid;\n    }\n  }\n\n  // Display alternative image if user does not have a profile image\n  setDefault(number: number) {\n    console.log(\"Hello\");\n    document.getElementById(\"conversationImage\" + number).setAttribute(\"src\", this.altSrc);\n  }\n\n  \n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-7\">\n            <div class=\"scroll-container\" *ngIf=\"conversationList.length > 0\">\n                <div *ngFor=\"let conversation of conversationList\">\n                    <div id=\"conversation{{conversationList.indexOf(conversation)}}\" class=\"margin\">\n                        <h1>{{names[conversationList.indexOf(conversation)]}}</h1>\n                        <img id=\"conversationImage{{conversationList.indexOf(conversation)}}\" (error)=\"setDefault(conversationList.indexOf(conversation))\" [routerLink]=\"['/main/messages/', compareUids(currentUid, conversation['uid'])]\" height=\"200\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"bottom-buttons\">\n                <button class=\"btn btn-dark\" [routerLink]=\"['/main']\">Home</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AccountserviceService } from 'src/app/accountservice.service';\nimport { Message } from '../message';\nimport { MessageserviceService } from '../messageservice.service';\nimport { VisualNovelComponent } from '../../visual-novel/visual-novel.component';\n\n@Component({\n  selector: 'app-conversation',\n  templateUrl: './conversation.component.html',\n  styleUrls: ['./conversation.component.css']\n})\nexport class ConversationComponent implements OnInit {\n\n  log: boolean = false;\n  previousMessage: string;\n  conversationId: string;\n  messages: any = [];\n  @ViewChildren('conversation') conversation: QueryList<any>;\n\n  constructor(private route: ActivatedRoute, private messageService: MessageserviceService,\n    private accountService: AccountserviceService) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.conversationId = params['id'];\n      this.messageService.getMessages(this.conversationId).subscribe(messages => {\n        if (messages.length > 0){\n          this.messages = messages;\n          this.previousMessage = this.messages.slice(-1)[0][\"messageText\"];\n          VisualNovelComponent.actorName = this.messages.slice(-1)[0][\"messageUser\"];\n          VisualNovelComponent.content = this.previousMessage;\n          VisualNovelComponent.actorImage = this.accountService.getUserImage('fake', this.messages.slice(-1)[0][\"uid\"]);\n        }\n    });\n  });\n}\n\nngAfterViewInit() {\n  this.conversation.changes.subscribe(() => {\n    if (document.getElementById('timestamp' + 0) != null) {\n      this.createLog();\n    }\n  })\n}\n\ncreateLog() {\n  for (let i = 0; i < this.messages.length; i++) {\n    document.getElementById('timestamp' + i).innerHTML = new Date(this.messages[i][\"messageTime\"]).toString();\n    document.getElementById('messageProfile' + i).setAttribute(\"src\", this.accountService.getUserImage(\"fake\", this.messages[i][\"uid\"]));\n  }\n}\n\nsendMessage() {\n  console.log(\"send message\");\n  this.accountService.getAccount(this.accountService.getSecureToken(\"AccountId\")).subscribe((account) => {\n    this.messageService.addMessage(this.conversationId, new Message((<HTMLInputElement>document.getElementById(\"textMessage\")).value,\n      new Date().toString(), account[\"username\"], this.accountService.getSecureToken(\"AccountId\")));\n    (<HTMLInputElement>document.getElementById(\"textMessage\")).value = '';\n  });\n}\n\nseeLog() {\n  this.log = true;\n}\n\ncancelLog() {\n  this.log = false;\n}\n\nsetRuv(integer: number){\n  document.getElementById(\"messageProfile\"+ integer).setAttribute(\"src\", \"../../assets/images/ruv.png\");\n}\n\n}\n\n","<div class=\"container\">\n    <div *ngIf=\"log != true\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <app-visual-novel></app-visual-novel>\n            </div>\n            <div class=\"col-sm-7 text-center\">\n                <textarea id=\"textMessage\" placeholder=\"Please send a message.\"></textarea>\n                <div class=\"bottom-buttons\">\n                    <button class=\"btn btn-dark\" [routerLink]=\"['/main']\">Home</button>\n                    <button class=\"btn btn-dark\" [routerLink]=\"['/main/messages']\">Conversations</button>\n                    <button class=\"btn btn-dark\" (click)=\"seeLog()\">Log</button>\n                    <button class=\"btn btn-dark\" (click)=\"sendMessage()\">Send</button>\n                    <!--<button class=\"btn btn-primary\" (click)=\"\">Cancel</button>!-->\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"log === true\">\n        <div #conversation *ngFor=\"let message of messages\" class=\"row message\">\n            <div class=\"col\">\n                <img id=\"messageProfile{{messages.indexOf(message)}}\" height=\"100px\" (error)=\"setRuv(messages.indexOf(message))\">\n                <h2 id=\"messageUsername{{messages.indexOf(message)}}\">{{message[\"messageUser\"]}}</h2>\n            </div>\n            <div class=\"col\">\n                <h5 id=\"message{{messages.indexOf(message)}}\">{{message[\"messageText\"]}}</h5>\n                <h6 id=\"timestamp{{messages.indexOf(message)}}\"></h6>\n            </div>\n        </div>\n        <div class=\"bottom-buttons\">\n            <button class=\"btn btn-dark\" (click)=\"cancelLog()\">Cancel Log</button>\n        </div>\n    </div>\n</div>","// Class that handles messages in a Conversation class\r\nexport class Message{\r\n    // content of message\r\n    messageText: string;\r\n    // timestamp when message is sent\r\n    messageTime: string;\r\n    // username of user who sent the message\r\n    messageUser: string;\r\n    // id of user who sent the message\r\n    uid: string;\r\n\r\n    constructor(messageText: string, messageTime: string, messageUser: string, uid: string){\r\n        this.messageText = messageText;\r\n        this.messageTime = messageTime;\r\n        this.messageUser = messageUser;\r\n        this.uid = uid;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { Conversation } from './conversation';\nimport { Message } from './message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageserviceService {\n\n\n  constructor(private realTime: AngularFireDatabase) { }\n\n  // get all conversations involving a certain user\n  getConversations(username: string) {\n    return this.realTime.list<Conversation>(\"Conversation/\" + username).valueChanges();\n  }\n\n  // add another conversation with another user\n  addConversation(username: string, conversation: Conversation) {\n    return this.realTime.list<Conversation>(\"Conversation/\" + username).set(conversation.getUsername(), conversation);\n  }\n\n  // get all messages from a conversation\n  getMessages(conversationName: string) {\n    return this.realTime.list<Message>(\"Message/\" + conversationName).valueChanges();\n  }\n\n\n  // add a message to a conversation\n  addMessage(conversationName: string, message: Message) {\n    return this.realTime.list<Message>(\"Message/\" + conversationName).push(message);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { VisualNovelComponent } from '../visual-novel/visual-novel.component';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  \n\n  constructor() { }\n\n  ngOnInit(): void {\n    // set the Visual Novel elements up\n    VisualNovelComponent.actorImage = \"assets/images/ruv.png\";\n    VisualNovelComponent.actorName = \"Ivan Illich\";\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-7\">\n            <h1 class=\"homepageText text-center\">Meet your perfect partner today!</h1>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Match} from './match';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchserviceService {\n\n  // url to communicate with match api\n  matchUrl: string = \"http://localhost:3000/api/match\";\n\n  constructor(private http: HttpClient) { }\n\n  getMatches(accountId: string){\n    return this.http.get<any[]>(this.matchUrl + '/' + accountId);\n  }\n\n  // create a new match for user\n  addMatch(item: Match) {\n    return this.http.post<any[]>(this.matchUrl, {\n      \"accountId\": item.accountId\n    });\n  }\n\n  // change match status\n  updateMatch(objectId: string , newItem: Match){\n    return this.http.put<any[]>(this.matchUrl + \"/\" + objectId, {newItem});  \n  }\n\n  deleteMatch(objectId: string) {\n    return this.http.delete<any[]>(this.matchUrl + \"/\" + objectId);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'vndates';\n}\n","<app-header></app-header>\n<div class=\"container\">\n    <div class=\"row\">\n        <!-- routing here -->\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { VisualNovelComponent } from '../visual-novel/visual-novel.component';\nimport { MatchserviceService } from './matchservice.service';\n\nimport { AccountserviceService } from '../accountservice.service';\n\nimport { MessageserviceService } from '../messages/messageservice.service';\nimport { Conversation } from '../messages/conversation';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Match } from './match';\nimport { Subscriber } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-matches',\n  templateUrl: './matches.component.html',\n  styleUrls: ['./matches.component.css']\n})\nexport class MatchesComponent implements OnInit {\n  altSrc: string = \"https://weneedfun.com/wp-content/uploads/2017/06/Anime-Gifs-29.gif\";\n  // store all matches\n  matches: any = [];\n  // store the names of matches\n  names: string[] = [];\n  // store the imageurls of matches\n  imageurls: string[] = [];\n  // store the ids of matches\n  matchIds: string[] = [];\n  // store whether user is able to see real profile\n  permission: string[] = []\n  // checks whether a certain match is selected\n  selected: number = null;\n\n\n  constructor(private matchService: MatchserviceService, private accountService: AccountserviceService,\n    private messageService: MessageserviceService, private route: ActivatedRoute, private router: Router) {\n\n    this.getMatches();\n  }\n\n  ngOnInit(): void {\n  }\n\n  // set the matches, names, imageurls array\n  getMatches() {\n    this.matchService.getMatches(this.accountService.getSecureToken(\"AccountId\")).subscribe((matches) => {\n      this.matches = matches;\n      console.log(matches);\n\n      // Add a match when a user has no matches\n      if (this.matches.length > 0) {\n        VisualNovelComponent.content = \"Looks like some people want to match with you. Oh wow.\";\n      } else {\n        this.matchService.addMatch(new Match(this.accountService.getSecureToken(\"AccountId\"))).subscribe((match) => {\n          console.log(match);\n          // delete match if generated match matches current user with themselves\n          if (this.accountService.getSecureToken(\"AccountId\") === match[\"ops\"][0].secondAccountId) {\n            this.matchService.deleteMatch(match[\"ops\"][0]._id).subscribe(() => {\n              location.reload();\n            })\n          } else {\n            location.reload();\n          }\n        });\n        VisualNovelComponent.content = \"No one is interested in you! :)\";\n      }\n\n      // iterate through the matches, and add usernames and imageurls to their respective arrays\n      for (var match of this.matches) {\n        // check whether accountId is the same as userId, and add other user details \n        if (match.accountId === this.accountService.getSecureToken(\"AccountId\")) {\n          this.accountService.getAccount(match.secondAccountId).subscribe((account) => {\n            this.names.push(account[\"username\"]);\n            const id = account[\"_id\"];\n            this.imageurls.push(this.accountService.getUserImage('fake', id));\n            this.matchIds.push(id);\n          });\n          // only if other user want to show their profile to user\n          if (match.secondIdStatus === \"real\") {\n            this.permission.push(match.secondAccountId);\n          }\n        } else {\n          this.accountService.getAccount(match.accountId).subscribe((account) => {\n            this.names.push(account[\"username\"]);\n            const id = account[\"_id\"];\n            this.imageurls.push(this.accountService.getUserImage('fake', id));\n            this.matchIds.push(id);\n          });\n          // only if other user want to show their profile to user\n          if (match.firstIdStatus === \"real\") {\n            this.permission.push(match.accountId);\n          }\n        }\n      }\n      console.log(this.matchIds);\n      // add permissions to session storage as JSON string\n      this.accountService.setSecureToken(\"permission\", JSON.stringify(this.permission));\n    });\n  }\n\n  // show the match that is selected\n  showSelection(id: number) {\n    console.log(this.selected);\n    // if a match is selected\n    if (this.selected != null) {\n      // remove border\n      document.getElementById(\"matchUser\" + this.selected).setAttribute(\"class\", \"margin\");\n    }\n    this.selected = id\n    // add border\n    document.getElementById(\"matchUser\" + id).setAttribute(\"class\", \"margin borders\");\n  }\n\n  // if image source is broken, use the alternate source\n  setDefault(number: number) {\n    console.log(\"Hello\");\n    document.getElementById(\"matchImage\" + number).setAttribute(\"src\", this.altSrc);\n  }\n\n  // delete match\n  deleteMatch() {\n    // remove border\n    document.getElementById(\"matchUser\" + this.selected).setAttribute(\"class\", \"margin\");\n    console.log(this.matches[this.selected][\"_id\"]);\n    this.matchService.deleteMatch(this.matches[this.selected][\"_id\"]).subscribe(results => {\n      console.log(results);\n      // deselect\n      this.selected = null;\n      location.reload();\n    });\n  }\n\n  // adds match as a user to converse with\n  converseMatch() {\n    this.accountService.getAccount(this.matches[this.selected].accountId).subscribe((account) => {\n      this.accountService.getAccount(this.matches[this.selected].secondAccountId).subscribe((account2) => {\n        this.messageService.addConversation(account[\"username\"], new Conversation(account2[\"_id\"], account2[\"username\"]));\n        this.messageService.addConversation(account2[\"username\"], new Conversation(account[\"_id\"], account[\"username\"]));\n      });\n    });\n\n    // checks whether accountId is equivalent to user before \n    if (this.accountService.getSecureToken(\"AccountId\") != this.matches[this.selected].accountId) {\n      this.router.navigate(['/main/messages/' + this.compareUids(this.matches[this.selected].accountId, this.accountService.getSecureToken(\"AccountId\"))]);\n    } else {\n      this.router.navigate(['/main/messages/' + this.compareUids(this.matches[this.selected].secondAccountId, this.accountService.getSecureToken(\"AccountId\"))]);\n    }\n  }\n\n  // creating conversationId out of the Ids\n  compareUids(firstUid: string, secondUid: string): string {\n    if (firstUid.localeCompare(secondUid) < 0) {\n      return firstUid + '_' + secondUid;\n    } else {\n      return secondUid + '_' + firstUid;\n    }\n  }\n\n  // show real profile to other\n  showReal() {\n    if (this.matches[this.selected].accountId === this.accountService.getSecureToken(\"AccountId\")) {\n      this.matches[this.selected].firstIdStatus = \"real\";\n    } else {\n      this.matches[this.selected].secondIdStatus = \"real\";\n    }\n    console.log(this.matches[this.selected]);\n    this.matchService.updateMatch(this.matches[this.selected]._id, this.matches[this.selected]).subscribe(() => {\n      location.reload();\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-7\">\n            <div class=\"scroll-container\" *ngIf=\"matches.length > 0\">\n                <div *ngFor=\"let match of matches\" (click)=\"showSelection(matches.indexOf(match))\">\n                    <div id=\"matchUser{{matches.indexOf(match)}}\" class=\"margin\">\n                        <h1>{{names[matches.indexOf(match)]}}</h1>\n                        <img id=\"matchImage{{matches.indexOf(match)}}\" [src]=\"imageurls[matches.indexOf(match)]\" (error)=\"setDefault(matches.indexOf(match))\" height=\"200\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"bottom-buttons\">\n                <button class=\"btn btn-dark\" [routerLink]=\"['/main']\">Home</button>\n                <button class=\"btn btn-dark\" *ngIf=\"selected != null\" (click)=\"showReal()\">Show Real Profile</button>\n                <button class=\"btn btn-dark\" *ngIf=\"selected != null\" [routerLink]=\"['/main/profile/fake/', matchIds[selected]]\">See Fake Profile</button>\n                <button class=\"btn btn-dark\" *ngIf=\"selected != null && permission.includes(matchIds[selected])\" [routerLink]=\"['/main/profile/real/', matchIds[selected]]\">See Real Profile</button>\n                <button class=\"btn btn-dark\" *ngIf=\"selected != null\" (click)=\"converseMatch()\">Yes</button>\n                <button class=\"btn btn-dark\" *ngIf=\"selected != null\" (click)=\"deleteMatch()\">No</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AccountserviceService } from '../accountservice.service';\nimport { VisualNovelComponent } from '../visual-novel/visual-novel.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  // id of current user\n  accountId: string;\n  // name of user\n  name: string;\n  // imageurl image profile of user\n  imageurl: string;\n\n  constructor(private accountService: AccountserviceService) { \n    this.accountId = accountService.getSecureToken(\"AccountId\");\n    accountService.getAccount(this.accountId).subscribe((account) => {\n      this.name = account[\"username\"];\n    });\n    this.imageurl = accountService.getUserImage('real', this.accountId);\n  }\n\n  ngOnInit(): void {\n    VisualNovelComponent.content = \"Here's you. Hope you put something good to look at.\";\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col\">\n            <div [routerLink]=\"['/main/profile/real/' + accountId]\">\n                <h1>{{name}}</h1>\n                <img [src]=\"imageurl\" width=\"300\">\n            </div>\n            <div class=\"bottom-buttons\">\n                <button class=\"btn btn-dark\" [routerLink]=\"['/main']\">Home</button>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { VisualNovelComponent } from './visual-novel/visual-novel.component';\nimport { MainpageComponent } from './mainpage/mainpage.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MatchesComponent } from './matches/matches.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { TalkComponent } from './talk/talk.component';\nimport { RealProfileComponent } from './profile/real-profile/real-profile.component';\nimport { FakeProfileComponent } from './profile/fake-profile/fake-profile.component';\n\nimport { AccountserviceService } from './accountservice.service';\nimport { ConversationComponent } from './messages/conversation/conversation.component';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from '@angular/fire';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    HomepageComponent,\n    VisualNovelComponent,\n    MainpageComponent,\n    HeaderComponent,\n    MatchesComponent,\n    MessagesComponent,\n    ProfileComponent,\n    TalkComponent,\n    RealProfileComponent,\n    FakeProfileComponent,\n    ConversationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgbModule,\n    AngularFireModule.initializeApp(environment.firebase)\n  ],\n  providers: [AccountserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header w-100\">\n            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse1\">\n                <h1>VNdates</h1>\n                <ul class=\"nav navbar-nav ml-auto\">\n                    <li *ngIf=\"router.url.split('/')[1] != 'main'\"><a class=\"nav-link\" routerLink=\"/register\" routerLinkActive=\"active\">Register</a></li>\n                    <li *ngIf=\"router.url.split('/')[1] != 'main'\"><a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\">Login</a></li>\n                    <li *ngIf=\"router.url.split('/')[1] === 'main'\"><a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" (click)=\"logout()\">Logout</a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { AccountserviceService } from '../accountservice.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public router: Router, private accountService: AccountserviceService) { }\n\n  ngOnInit(): void {\n  }\n  \n  // Logs the user out\n  logout(){\n    this.accountService.logout();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountserviceService } from './accountservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RealProfileGuard implements CanActivate {\n\n  constructor(private accountService: AccountserviceService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const id = route.paramMap.get(\"accountId\");\n    const permissionArray = JSON.parse(this.accountService.getSecureToken(\"permission\"));\n    // if user is viewing their own real profile\n    if(this.accountService.getSecureToken(\"AccountId\") === id){\n      return true;\n    }\n    // if user has permission\n    if (permissionArray.includes(id)) {\n      return true;\n    }\n    else {\n      this.accountService.logout();\n      console.log(\"You had been logout, You are not authorized to access the page\");\n      this.router.navigateByUrl('/');\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VisualNovelComponent } from '../../visual-novel/visual-novel.component';\n\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { AccountserviceService } from '../../accountservice.service';\nimport { Profile } from '../../profile';\n\n\n@Component({\n  selector: 'app-real-profile',\n  templateUrl: './real-profile.component.html',\n  styleUrls: ['./real-profile.component.css']\n})\nexport class RealProfileComponent implements OnInit {\n\n  realProfileForm: FormGroup;\n  realProfile: Profile;\n  fileToUpload: File | null = null;\n  // id of current user\n  userId: string;\n  // id of current profile\n  accountId: string;\n  // image url of profile image of current profile\n  imageurl: string;\n\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router,\n    private accountService: AccountserviceService) {\n    const routeParams = this.route.snapshot.paramMap;\n    this.accountId = routeParams.get('accountId');\n    this.userId = accountService.getSecureToken(\"AccountId\");\n  }\n\n  ngOnInit(): void {\n    this.realProfileForm = this.fb.group({\n      realName: ['', [Validators.required]],\n      realAge: ['', [Validators.required, Validators.min(0)]],\n      realGender: ['', [Validators.required]],\n      realLocation: ['', [Validators.required]],\n      realTagline: ['', [Validators.required, Validators.maxLength(50)]],\n      realDescription: ['', [Validators.required, Validators.maxLength(300)]],\n      realPhoto: '',\n    });\n\n    // if user is not signing up a new account, get current user's information\n    if (this.accountId != null) {\n      this.imageurl = this.accountService.getUserImage('real', this.accountId);\n      this.accountService.getAccount(this.accountId).subscribe((account) => {\n        this.realProfileForm.patchValue({\n          realName: account[\"realProfile\"][\"realName\"],\n          realAge: account[\"realProfile\"][\"realAge\"],\n          realGender: account[\"realProfile\"][\"realGender\"],\n          realLocation: account[\"realProfile\"][\"realLocation\"],\n          realTagline: account[\"realProfile\"][\"realTagline\"],\n          realDescription: account[\"realProfile\"][\"realDescription\"],\n        });\n      });\n\n      document.getElementById(\"realPhotoDisplay\").setAttribute(\"src\", this.imageurl);\n    }\n\n    VisualNovelComponent.content = \"So who are you really?\";\n  }\n\n  // set image to upload and display image\n  showImage(files: FileList) {\n    this.fileToUpload = files.item(0);\n    document.getElementById(\"realPhotoDisplay\").setAttribute(\"src\", URL.createObjectURL(this.fileToUpload));\n  }\n\n  //update profile information\n  onSubmit() {\n    let profile = new Profile(this.realProfileForm.value.realName, this.realProfileForm.value.realAge,\n      this.realProfileForm.value.realLocation, this.realProfileForm.value.realTagline, this.realProfileForm.value.realDescription,\n      this.realProfileForm.value.realGender);\n\n    if (this.fileToUpload != null) {\n      const formData = new FormData();\n      formData.append('file', this.fileToUpload);\n      this.accountService.uploadPhoto(formData, 'real' + this.accountService.getSecureToken(\"AccountId\"));\n    }\n\n    this.accountService.updateRealProfile(profile, this.accountService.getSecureToken(\"AccountId\"));\n\n    // add account Id as parameter if user is not new and is just looking at the profile information they have inputted\n    if (this.accountId != null) {\n      this.router.navigate(['/main/profile/fake' + '/' + this.accountId])\n    } else {\n      this.router.navigate(['/main/profile/fake']);\n    }\n\n  }\n\n\n\n\n\n}\n","<div>\n    <div class=\"row\">\n        <div class=\"col-sm-3\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-7\">\n            <form class=\"container\" [formGroup]=\"realProfileForm\" novalidate (ngSubmit)=\"onSubmit()\" action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div>\n                            <div class=\"row\">\n                                <div class=\"col text-center\">\n                                    <label for=\"realName\">Name:</label>\n                                    <p>\n                                        <input formControlName=\"realName\" id=\"realName\" placeholder=\"Your name\"></p>\n                                    <p *ngIf=\"realProfileForm.controls.realName.dirty && realProfileForm.controls.realName.hasError( 'required') \">\n                                        * Name is required!\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col text-center\">\n                                    <label for=\"realAge \">Age:</label>\n                                    <p><input formControlName=\"realAge\" id=\"realAge\" placeholder=\"Your age\"></p>\n                                    <p *ngIf=\"realProfileForm.controls.realAge.dirty && realProfileForm.controls.realAge.hasError( 'required') \">\n                                        * Age is required!\n                                    </p>\n                                    <p *ngIf=\"realProfileForm.controls.realAge.dirty && realProfileForm.controls.realAge.hasError( 'min') \">\n                                        * Age has to be more than 0!\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class=\"row \">\n                                <div class=\"col text-center\">\n                                    <label for=\"realGender \">Gender:</label>\n                                    <p><input formControlName=\"realGender\" id=\"realGender\" placeholder=\"Your Gender\"></p>\n                                    <p *ngIf=\"realProfileForm.controls.realGender.dirty && realProfileForm.controls.realGender.hasError( 'required') \">\n                                        * Gender is required!\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class=\"row \">\n                                <div class=\"col text-center\">\n                                    <label for=\"realLocation \">Lives at:</label>\n                                    <p><input formControlName=\"realLocation\" id=\"realLocation\" placeholder=\"Your Location\"></p>\n                                    <p *ngIf=\"realProfileForm.controls.realLocation.dirty && realProfileForm.controls.realLocation.hasError( 'required') \">\n                                        * Location is required!\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class=\"row \">\n                                <div class=\"col text-center\">\n                                    <label for=\"realTagline \">Tagline:</label>\n                                    <p><input formControlName=\"realTagline\" id=\"realTagline\" placeholder=\"Your Tagline\"></p>\n                                    <p *ngIf=\"realProfileForm.controls.realTagline.dirty && realProfileForm.controls.realTagline.hasError( 'required') \">\n                                        * Tagline is required!\n                                    </p>\n                                    <p *ngIf=\"realProfileForm.controls.realTagline.dirty && realProfileForm.controls.realTagline.hasError( 'maxLength') \">\n                                        * Tagline can only have a maximum of 50 characters.\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class=\"row \">\n                                <div class=\"col text-center\">\n                                    <label for=\"realDescription\">Description:</label>\n                                    <p><input formControlName=\"realDescription\" id=\"realDescription\" placeholder=\"Your Description \"></p>\n                                    <p *ngIf=\"realProfileForm.controls.realDescription.dirty && realProfileForm.controls.realDescription.hasError( 'required') \">\n                                        * Description is required!\n                                    </p>\n                                    <p *ngIf=\"realProfileForm.controls.realDescription.dirty && realProfileForm.controls.realDescription.hasError( 'maxLength') \">\n                                        * Description can only have a maximum of 300 characters.\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"real-profile-vn-btn\">\n                            <button class=\"btn btn-dark\" *ngIf=\"accountId != userId && accountId != null\" [routerLink]=\"['/main/matches']\">Back to Matches</button>\n                            <button class=\"btn btn-dark\" *ngIf=\"accountId === null || accountId === userId\" type=\"submit \" [disabled]=\"!realProfileForm.valid\">Continue to Fake Profile</button>\n                        </div>\n\n                    </div>\n                    <div class=\"col text-center\">\n                        <label for=\"realPhoto\">Real Profile Photo:</label>\n                        <p><input type=\"file\" accept=\"image/*\" id=\"realPhoto\" name=\"realPhoto\" (change)=\"showImage($event.target.files)\"></p>\n                        <img id=\"realPhotoDisplay\" height=\"300\" />\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { VisualNovelComponent } from '../visual-novel/visual-novel.component';\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})\nexport class MainpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // setup Visual Novel elements\n    VisualNovelComponent.content = \"Welcome back. Let's hope you have some matches.\";\n    VisualNovelComponent.actorImage = \"../../assets/images/ruv.png\";\n    VisualNovelComponent.actorName = \"Ivan Illich\";\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-8\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <a routerLink=\"matches\" routerLinkActive=\"active\" class=\"nav-link badge badge-pill badge-dark \">Matches</a>\n                    </div>\n                    <div class=\"col \">\n                        <a routerLink=\"messages\" routerLinkActive=\"active\" class=\"nav-link badge badge-pill badge-dark \">Messages</a>\n                    </div>\n                </div>\n                <div class=\"row \">\n                    <div class=\"col \">\n                        <a routerLink=\"profile\" routerLinkActive=\"active\" class=\"nav-link badge badge-pill badge-dark \">Profile</a>\n                    </div>\n                    <div class=\"col \">\n                        <a routerLink=\"talk\" routerLinkActive=\"active\" class=\"nav-link badge badge-pill badge-dark \">Just Talk</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","export class Profile{\r\n    public name: string;\r\n    public age: string;\r\n    public location: string;\r\n    public tagline: string;\r\n    public description: string;\r\n    public gender: string;\r\n\r\n    constructor(name: string, age: string, location: string, tagline: string, description: string, gender: string){\r\n        this.name = name;\r\n        this.age = age;\r\n        this.location = location;\r\n        this.tagline = tagline;\r\n        this.description = description;\r\n        this.gender = gender;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountserviceService } from './accountservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private accountService: AccountserviceService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    // logs user out if they are not authenticated\n    if (this.accountService.getSecureToken(\"AccountId\") != null) {\n      return true;\n    } else {\n      this.accountService.logout();\n      console.log(\"You had been logout, You are not authorized to access the page\");\n      this.router.navigateByUrl('/');\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { VisualNovelComponent } from './visual-novel/visual-novel.component';\r\n\r\nimport { MainpageComponent } from './mainpage/mainpage.component';\r\nimport { MatchesComponent } from './matches/matches.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { TalkComponent } from './talk/talk.component';\r\nimport { RealProfileComponent } from './profile/real-profile/real-profile.component';\r\nimport { FakeProfileComponent } from './profile/fake-profile/fake-profile.component';\r\nimport { ConversationComponent } from './messages/conversation/conversation.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { RealProfileGuard } from './real-profile.guard';\r\n\r\n// handles routes while also using an authguard to ensure unauthorised users can't enter\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login', component: LoginComponent\r\n  },\r\n  {\r\n    path: 'register', component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'main', component: MainpageComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'main/matches', component: MatchesComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'main/messages', component: MessagesComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'main/messages/:id', component: ConversationComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'main/profile', component: ProfileComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'main/profile/real', component: RealProfileComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'main/profile/real/:accountId', component: RealProfileComponent, canActivate: [AuthGuard, RealProfileGuard]\r\n  },\r\n  {\r\n    path: 'main/profile/fake', component: FakeProfileComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'main/profile/fake/:accountId', component: FakeProfileComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'main/talk', component: TalkComponent, canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: '', component: HomepageComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\nexport const routing: ModuleWithProviders<any> =\r\n  RouterModule.forRoot(routes);\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { VisualNovelComponent } from '../visual-novel/visual-novel.component';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { AccountserviceService } from '../accountservice.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router,\n    private accountService: AccountserviceService) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      login_username: ['', [Validators.required]],\n      login_password: ['', [Validators.required]],\n    });\n\n    VisualNovelComponent.content = \"So who are you?\";\n  }\n  // function to invoke an alert\n  onSubmit() {\n    // authenticates account\n    this.accountService.authAccount(this.loginForm.value.login_username, this.loginForm.value.login_password).subscribe(data => {\n      // if user's info is correct\n      if (data[0].auth) {\n        // add _id under Session Storage\n        this.accountService.setSecureToken(\"AccountId\", data[0][\"_id\"]);\n        this.router.navigate(['/main'], { relativeTo: this.route });\n      } else {\n        console.log(\"Wrong username or password\");\n      }\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\">\n            <app-visual-novel></app-visual-novel>\n        </div>\n        <div class=\"col-sm-8\">\n            <form [formGroup]=\"loginForm\" novalidate (ngSubmit)=\"onSubmit()\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div class=\"form-group\">\n                                <label for=\"login_username\"><h3>Username</h3></label>\n                                <p><input formControlName=\"login_username\" id=”register_username” placeholder=\"Your username\"></p>\n                                <p *ngIf=\"loginForm.controls.login_username.dirty && loginForm.controls.login_username.hasError('required')\">\n                                    * Username is required!\n                                </p>\n                            </div>\n                        </div>\n                        <div class=\"col\">\n                            <div class=\"form-group\">\n                                <label for=\"login_password\"><h3>Password</h3></label>\n                                <p><input formControlName=\"login_password\" id=”login_password” type=”password” placeholder=\"Your password\"></p>\n                                <p *ngIf=\"loginForm.controls.login_password.dirty && loginForm.controls.login_password.hasError('required')\">\n                                    * Password is required!\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button class=\"btn btn-primary login-vn-btn\" type=\"submit\" [disabled]=\"!loginForm.valid\">Login</button>\n            </form>\n        </div>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","// Match class that stores Match information\r\nexport class Match{\r\n    // unique identifier of match\r\n    public _id: string;\r\n    // account id of a user\r\n    public accountId: string;\r\n    // another account id of another user\r\n    public secondAccountId: string;\r\n    // match status of first user\r\n    public firstIdStatus: string;\r\n    // match status of second user\r\n    public secondIdStatus: string;\r\n\r\n    constructor(accountId){\r\n        this.accountId = accountId;\r\n    }\r\n}"],"sourceRoot":"webpack:///"}